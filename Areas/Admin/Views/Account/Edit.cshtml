
@model BASIC_PROJECT_Model.Models.Account
@using BASIC_PROJECT_Model.Models
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Chỉnh sửa tài khoản";
    Layout = "~/Views/Shared/_Layout1.cshtml";
    var roles = ViewBag.roles as List<Role>;
    var employees = ViewBag.Employees as List<Employee>;
    var customers = ViewBag.Custs as List<Customer>;
    var empsJson = JsonConvert.SerializeObject(employees);
    var custsJson = JsonConvert.SerializeObject(customers);
}

@section Scripts {
    <script>
        const employees = @Html.Raw(empsJson);
        const customers = @Html.Raw(custsJson);

        function loadEmailFromEmployee(val) {
            const id = parseInt(val);
            const emp = employees.find(e => e.EmployeeId === id);
            document.getElementById("EmailInput").value = emp?.Email || "";
        }

        function generatePassword(length = 12) {
            const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@@#$%^&*()";
            let pwd = "";
            for (let i = 0; i < length; i++) {
                pwd += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            document.getElementById("PasswordInput").value = pwd;
        }

        function loadEmailFromCustomer(val) {
            const id = parseInt(val);
            const cus = customers.find(c => c.CustomerId === id);
            document.getElementById("EmailInput").value = cus?.Email || "";
        }

        function handleRoleChange(roleId) {
            const customerRoleId = 4;
            if (parseInt(roleId) === customerRoleId) {
                document.getElementById("customerSelect").style.display = "block";
                document.getElementById("employeeSelect").style.display = "none";
            } else {
                document.getElementById("customerSelect").style.display = "none";
                document.getElementById("employeeSelect").style.display = "block";
            }
        }

        window.onload = function () {
            const selectedRoleId = document.querySelector("[name='RoleId']").value;
            handleRoleChange(selectedRoleId);
        };
    </script>
}

<div class="container-fluid px-4">
    <div class="card shadow mb-4">
        <div class="card-header bg-success text-white">
            <h4 class="mb-0"><i class="fas fa-user-edit me-2"></i>Chỉnh sửa tài khoản</h4>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.Id)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="mb-3">
                    @Html.LabelFor(m => m.Username, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.Label("Phân quyền", new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(m => m.RoleId,
                        new SelectList(roles, "RoleId", "RoleName", Model.RoleId),
                        "-- Chọn quyền --",
                        new { @class = "form-select", onchange = "handleRoleChange(this.value)" })
                    @Html.ValidationMessageFor(m => m.RoleId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3" id="employeeSelect" style="display: none;">
                    @Html.LabelFor(m => m.EmployeeId, new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(
                        m => m.EmployeeId,
                        new SelectList(ViewBag.Employees as List<Employee>, "EmployeeId", "FullName"),
                        "-- Chọn nhân viên --",
                        new
                        {
                            @class = "form-select",
                            onchange = "loadEmailFromEmployee(this.value)"
                        })
                    @Html.ValidationMessageFor(m => m.EmployeeId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3" id="customerSelect" style="display: none;">
                    @Html.LabelFor(m => m.CustomerId, new { @class = "form-label fw-bold" })
                    @Html.DropDownListFor(
                        m => m.CustomerId,
                        new SelectList(ViewBag.Custs as List<Customer>, "CustomerId", "FullName"),
                        "-- Chọn khách hàng --",
                        new
                        {
                            @class = "form-select",
                            onchange = "loadEmailFromCustomer(this.value)"
                        })
                    @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Email, new { @class = "form-label fw-bold" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "EmailInput" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.Password, new { @class = "form-label fw-bold" })
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.Password,
                            new { @class = "form-control", @id = "PasswordInput", autocomplete = "new-password" })
                        <button type="button" class="btn btn-outline-secondary" onclick="generatePassword()">Tạo mật khẩu</button>
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-success">Cập nhật</button>
                @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-secondary ms-2" })
            }
        </div>
    </div>
</div>
